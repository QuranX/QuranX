@using QuranX.Web.Models
@using QuranX.Persistence.Models
@using QuranX.Web.Views.QuranVerses
@model ViewModel

@{
	ViewBag.Title = "The Qur'an";
}

<h1>@ViewBag.Title</h1>
@{ Html.RenderPartial("SelectChapterAndVerse", Model.SelectChapterAndVerse); }

<div class="dropdown">
	<button class="btn dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
		Translations
	</button>
	<div class="dropdown-menu verse__translation-hidden-items" aria-labelledby="dropdownMenuButton">
		@foreach (Translator translator in Model.Translators)
		{
			<button class="verse__translation-hidden-item btn" data-translator-code="@translator.Code">
				@translator.Name
			</button>
		}
	</div>
</div>

@foreach (ChapterAndVerseSelection group in Model.DisplayVerses)
{
	<h2>@group.Chapter.EnglishName - @group.Chapter.ArabicName</h2>
	foreach (Verse verse in group.Verses)
	{
		if (Model.AutoScrollToSelectedVerse
			&& verse.ChapterNumber == Model.SelectChapterAndVerse.SelectedChapterNumber
			&& verse.VerseNumber == Model.SelectChapterAndVerse.SelectedVerseNumber)
		{
			<a name="focal-point"></a>
		}
		<div class="row verse__statistics">
			<span class="verse__reference">@verse.ChapterNumber.@verse.VerseNumber</span>
			<a href="analysis/@verse.ChapterNumber.@verse.VerseNumber">
				<dl class="count-and-label">
					<dd>@verse.RootWordCount</dd>
					<dt>Roots</dt>
				</dl>
			</a>
			@if (verse.CommentaryCount > 0)
			{
				<a href="tafsirs/@verse.ChapterNumber.@verse.VerseNumber">
					<dl class="count-and-label">
						<dd>@verse.CommentaryCount</dd>
						<dt>Tafirs</dt>
					</dl>
				</a>
			}
			@if (verse.HadithCount > 0)
			{
				<a href="hadiths/@verse.ChapterNumber.@verse.VerseNumber">
					<dl class="count-and-label">
						<dd>@verse.HadithCount</dd>
						<dt>Hadiths</dt>
					</dl>
				</a>
			}
		</div>

		<div class="verse__translations boxed">
			@foreach (VerseText translation in verse.VerseTexts)
			{
				string arabicCss = translation.TranslatorCode == "AR" ? "arabic" : "";
				string containerPaddingCss = arabicCss != "" ? "arabic-container" : "";
				<dl class="verse__translation @containerPaddingCss" data-translator-code="@translation.TranslatorCode">
					<dt>@translation.TranslatorName</dt>
					<dd class="@arabicCss highlightable">@translation.Text</dd>
				</dl>
			}
		</div>
	}
}
@section scripts {
	<script>

		function toggleTranslation(translatorCode, immediateHide) {
			var verseElem = $(`.verse__translation[data-translator-code="${translatorCode}"`);
			var hiddenCodeElem = $(`.verse__translation-hidden-item[data-translator-code="${translatorCode}"`);

			if (!immediateHide) {
				verseElem.toggle("collapse");
				hiddenCodeElem.toggle("collapse");
			} else {
				verseElem.hide();
				hiddenCodeElem.show();
			}
		}
		// Buttons to show translations
		$(".verse__translation-hidden-item")
			.each(function (index, elem) {
				elem = $(elem);
				const translatorCode = elem.data("translator-code");
				if (window.localStorage.getItem(translatorCode)) {
					elem.show();
				} else {
					elem.hide();
				}
			})
			.on("click", function (ev) {
				const elem = $(ev.target);
				const translatorCode = elem.data("translator-code");
				window.localStorage.removeItem("hide-" + translatorCode);

				toggleTranslation(translatorCode);
			});
		// Translations
		$(".verse__translation>dt")
			.each(function (index, elem) {
				elem = $(elem.parentElement);
				const translatorCode = elem.data("translator-code");
				// If this is the first visit
				if (!window.localStorage.getItem("returnVisit")) {
					// Hide the translation if not one of the defaults to show
					if (["AR", "Pickthall", "SahihIntl", "YusufAli"].indexOf(translatorCode) < 0) {
						window.localStorage.setItem("hide-" + translatorCode, true);
					}
				}
				if (window.localStorage.getItem("hide-" + translatorCode)) {
					toggleTranslation(translatorCode, true);
				};
			})
			.on("click", function (ev) {
				const elem = $(ev.target.parentElement);
				const translatorCode = elem.data("translator-code");
				window.localStorage.setItem("hide-" + translatorCode, true);

				toggleTranslation(translatorCode);
			});
		$(document).ready(function () {
			window.localStorage.setItem("returnVisit", true);
		});
	</script>
}