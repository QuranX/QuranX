@using QuranX.Web.Models
@using QuranX.Persistence.Models
@using QuranX.Web.Views.QuranVerses
@model ViewModel

@{
	ViewBag.Title = "The Noble Qur'an";
}

<h1>@ViewBag.Title</h1>
@{ Html.RenderPartial("SelectChapterAndVerse", Model.SelectChapterAndVerse); }
@foreach (ChapterAndVerseSelection group in Model.DisplayVerses)
{
	<h2>@group.Chapter.EnglishName - @group.Chapter.ArabicName</h2>
	foreach (Verse verse in group.Verses)
	{
		<div class="row verse__statistics">
			<span class="verse__reference">@verse.ChapterNumber.@verse.VerseNumber</span>
			<a href="analysis/@verse.ChapterNumber.@verse.VerseNumber">
				<dl class="count-and-label">
					<dd>@verse.RootWordCount</dd>
					<dt>Roots</dt>
				</dl>
			</a>
			@if (verse.CommentaryCount > 0)
			{
				<a href="tafsirs/@verse.ChapterNumber.@verse.VerseNumber">
					<dl class="count-and-label">
						<dd>@verse.CommentaryCount</dd>
						<dt>Tafirs</dt>
					</dl>
				</a>
			}
			@if (verse.HadithCount > 0)
			{
				<a href="hadiths/@verse.ChapterNumber.@verse.VerseNumber">
					<dl class="count-and-label">
						<dd>@verse.HadithCount</dd>
						<dt>Hadiths</dt>
					</dl>
				</a>
			}
		</div>

		<div class="verse__translation-hidden-items">
			@foreach (VerseText translation in verse.VerseTexts)
			{
				<button class="verse__translation-hidden-item btn" data-translator-code="@translation.TranslatorCode">
					@translation.TranslatorName
				</button>
			}
		</div>

		foreach (VerseText translation in verse.VerseTexts)
		{
			<dl class="boxed verse__translation" data-translator-code="@translation.TranslatorCode">
				<dt>@translation.TranslatorName</dt>
				<dd>@translation.Text</dd>
			</dl>
		}
	}
}
@section scripts {
	<script>
		function toggleTranslation(translatorCode) {
			$(`.verse__translation[data-translator-code="${translatorCode}"`).toggle("collapse");
			$(`.verse__translation-hidden-item[data-translator-code="${translatorCode}"`).toggle("collapse");
		}
		// Buttons to show translations
		$(".verse__translation-hidden-item")
			.each(function (index, elem) {
				elem = $(elem);
				const translatorCode = elem.data("translator-code");
				if (window.localStorage.getItem(translatorCode)) {
					elem.show();
				} else {
					elem.hide();
				}
			})
			.on("click", function (ev) {
				const elem = $(ev.target);
				const translatorCode = elem.data("translator-code");
				window.localStorage.removeItem(translatorCode);

				toggleTranslation(translatorCode);
			});
		// Translations
		$(".verse__translation>dt")
			.each(function (index, elem) {
				elem = $(elem.parentElement);
				const translatorCode = elem.data("translator-code");
				if (window.localStorage.getItem(translatorCode)) {
					elem.hide();
				};
			})
			.on("click", function (ev) {
				const elem = $(ev.target.parentElement);
				const translatorCode = elem.data("translator-code");
				window.localStorage.setItem(translatorCode, true);

				toggleTranslation(translatorCode);
			});
	</script>
}