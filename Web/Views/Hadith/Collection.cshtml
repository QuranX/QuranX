@model QuranX.Models.Hadith_DrillDown

@{
    ViewBag.Title = Model.Collection.Name;
    if (Model.NextKeyPartName == null && Model.HadithsInCurrentSelection.Count() > 0)
    {
        var firstHadith = Model.HadithsInCurrentSelection.First();
        ViewBag.Title += " " + firstHadith.Key.GetCaption(Model.ReferenceDefinition.PartNames);
    }
}

@section head_meta {
    @{
        string path = "Hadith collection " + Model.Collection.Name + " " +
            string.Join(",", Model.SelectedKeyParts.Select(x => x.Key + " " + x.Value));
    }
    <meta property="og:description" content="@path" />
}

<hgroup>
    <h1>Hadith collection</h1>
    <h2>
        @{
            string urlSoFar = Url.Action("Collection", new { Path = "" });
            <a href="@urlSoFar">@Model.Collection.Name</a>
            foreach (var keyPart in Model.SelectedKeyParts)
            {
                string nextKey = keyPart.Key + "-" + keyPart.Value;
                urlSoFar += nextKey + "/";
                <span>/ <a href="@urlSoFar">@nextKey</a></span>
            }
        }
    </h2>
    <h2>
        @{ 
            int hadithCount = Model.HadithsInCurrentSelection.Count();
            string plural = hadithCount == 1 ? "" : "s";
        }
        @hadithCount Hadith@(plural)
    </h2>
</hgroup>
<h3>Alternative indexes</h3>
<ul class="hadithIndexList">
    @foreach (var referenceDefinition in Model.Collection.ReferenceDefinitions.OrderBy(x => x.Code))
    {
        string additionalClasses = referenceDefinition == Model.ReferenceDefinition ? "selected" : "not-selected";
        <li class="@additionalClasses">
            <a href="/Hadith/@Model.Collection.Code/@referenceDefinition.Code">@referenceDefinition.Name</a>
        </li>
    }
</ul>
@if (@Model.NextKeyPartName != null)
{
    <h3>Select @Model.NextKeyPartName</h3>
}


@if (@Model.NextKeyPartName != null)
{
    <ul class="hadithReferenceList">
        @foreach (string value in Model.NextKeyPartSelection)
        {
            string newUrl = string.Format("{0}{1}-{2}/", Url.Action("Collection"), Model.NextKeyPartName, value);
            <li>
                <a href="@newUrl">@Model.NextKeyPartName @value</a>
            </li>
        }
    </ul>
}
else
{
    foreach (var referenceAndHadith in Model.HadithsInCurrentSelection)
    {
        @Html.Partial("HadithView", new QuranX.DocumentModel.CollectionAndHadith(collection: Model.Collection, hadith: referenceAndHadith.Value));
    }
}