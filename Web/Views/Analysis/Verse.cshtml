@model QuranX.Models.Analysis_Verse
@using QuranX.DocumentModel;

@{
    ViewBag.Title = "Classical Arabic analysis of Quran " + Model.Chapter.Index + "." + Model.Verse.Index;
}
@section head_meta {
    <meta name="robots" content="noindex" />
	<meta property="og:description" content="@ViewBag.Title" />
}


<hgroup>
    <h1>The Quran</h1>
    <h2>Analysis of 
        <a href="@Url.Action("Verse", "Quran")">
            @Model.Chapter.Index.@Model.Verse.Index
        </a>
        @Model.Chapter.EnglishName - @Model.Chapter.ArabicName
    </h2>
</hgroup>

<table class="wordTable">
    <tbody>
        @foreach (var word in Model.Verse.Words)
        {
            <tr id="word_@word.Index" class="highlightable">
                <td>
                    <span class="verseReference">@Model.Chapter.Index.@Model.Verse.Index.@word.Index</span>
                </td>
                <td>
                    <figure>
                        <img src="@Url.Content("~/Content/Images/ArabicWords/" + word.Buckwalter.ToHexValues() + ".png")" alt="@word.Buckwalter" />
                        <figcaption>
                            @word.Buckwalter<br />
                            @word.English
                        </figcaption>
                    </figure>
                </td>
                <td>
                    <ol>
                        @foreach (var wordPart in word.Parts)
                        {
                            <li>
                                @wordPart.TypeCode - 
                                @foreach(string decorator in @wordPart.Decorators)
                                {
                                    <span>@decorator</span>
                                }
                                @wordPart.TypeDescription
                                @if (!string.IsNullOrEmpty(wordPart.Root))
                                {
                                    <span class="arabicText">
                                        @Html.ActionLink(
                                            linkText: wordPart.Root,
                                            actionName: "Root",
                                            routeValues: new
                                            {
                                                Root = QuranX.ArabicHelper
                                                    .ArabicToLetterNames(wordPart.Root)
                                            }
                                        )
                                    </span>
                                    <span>(@QuranX.ArabicHelper.ArabicToLetterNames(wordPart.Root))</span>
                                }
                            </li>
                        }
                    </ol>
                </td>
            </tr>
        }
    </tbody>
</table>
