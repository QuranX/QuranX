@model QuranX.DocumentModel.CollectionAndHadith
@using QuranX.DocumentModel;

<article itemscope itemtype="http://schema.org/Article">
    <dl class="hadith">
        @{
            System.Func<HadithReferenceDefinition, HadithReference, string> getReferenceUrl = (definition, reference) =>
            {
                string hadithUrl = Url.Action("Collection", "Hadith", new { CollectionCode = Model.Collection.Code, IndexCode = definition.Code, Path = "" });
                int keyPartIndex = 0;
                foreach (var referencePart in reference)
                {
                    hadithUrl += definition.PartNames[keyPartIndex] + "-" + referencePart + "/";
                    keyPartIndex++;
                }
                return hadithUrl;
            };
            HadithReference primaryReference;
            HadithReferenceDefinition primaryDefinition;
            if (Model.Hadith.PrimaryReference != null)
            {
                primaryReference = Model.Hadith.PrimaryReference;
                primaryDefinition = Model.Collection.PrimaryReferenceDefinition;
            }
            else
            {
                primaryReference = Model.Hadith.References.OrderByDescending(x => x.Code).First();
                primaryDefinition = Model.Collection.ReferenceDefinitions.Single(x => string.Compare(primaryReference.Code, x.Code, true) == 0);
            }
        }
        <dt>
            <a href="@getReferenceUrl(primaryDefinition, primaryReference)" itemprop="name">
                @Model.Collection.Name : @primaryDefinition.Name / @primaryReference.GetCaption(primaryDefinition.PartNames)
            </a>
        </dt>
        <dd itemprop="articleBody">
            @foreach (var line in Model.Hadith.EnglishText)
            {
                <p class="highlightable">@line</p>
            }
        </dd>
        <dd class="additional">
            <figure class="hadithReferences">
                <figcaption>Indexes</figcaption>
                <table itemprop="articleSection">
                    @foreach (var otherReference in Model.Hadith.References)
                    {
                        var referenceDefinition = Model.Collection.GetReferenceDefinition(otherReference.Code);
                        <tr>
                            <td>
                                @referenceDefinition.Name
                            </td>
                            <td>
                                <a href="@getReferenceUrl(referenceDefinition, otherReference)">
                                    @referenceDefinition.ValuePrefix @otherReference.GetCaption(referenceDefinition.PartNames)
                                </a>
                            </td>
                        </tr>
                    }
                </table>
            </figure>
            <figure class="hadithReferences">
                <figcaption>Related Quran verses</figcaption>
                <ul>
                    @foreach (var item in Model.Hadith.VerseReferences)
                    {
                        <li><a href="/@item.ToString()">@item.ToString()</a></li>
                    }
                </ul>
            </figure>
        </dd>
		@if (Model.Hadith.ArabicText != null && Model.Hadith.ArabicText.Length > 0)
		{
			<dd>
				@foreach (var line in Model.Hadith.ArabicText)
				{
					<p class="highlightable arabicText">@line</p>
				}
			</dd>
		}
    </dl>
</article>
